#ifndef BITBOARDS_H
#define BITBOARDS_H
#include "deftypes.h"

//-------------------------------------------------------------------------------------
//            bitboards for passers , doubled, isolated and backwards evaluation
//-------------------------------------------------------------------------------------
static U64 bitboard_front[2][64] =
{
    {
        0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,
        0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,
        0x0003000000000000,0x0007000000000000,0x000E000000000000,0x001C000000000000,0x0038000000000000,0x0070000000000000,0x00E0000000000000,0x00C0000000000000,
        0x0003030000000000,0x0007070000000000,0x000E0E0000000000,0x001C1C0000000000,0x0038380000000000,0x0070700000000000,0x00E0E00000000000,0x00C0C00000000000,
        0x0003030300000000,0x0007070700000000,0x000E0E0E00000000,0x001C1C1C00000000,0x0038383800000000,0x0070707000000000,0x00E0E0E000000000,0x00C0C0C000000000,
        0x0003030303000000,0x0007070707000000,0x000E0E0E0E000000,0x001C1C1C1C000000,0x0038383838000000,0x0070707070000000,0x00E0E0E0E0000000,0x00C0C0C0C0000000,
        0x0003030303030000,0x0007070707070000,0x000E0E0E0E0E0000,0x001C1C1C1C1C0000,0x0038383838380000,0x0070707070700000,0x00E0E0E0E0E00000,0x00C0C0C0C0C00000,
        0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000
    },
    {
        0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,
        0x0000030303030300,0x0000070707070700,0x00000E0E0E0E0E00,0x00001C1C1C1C1C00,0x0000383838383800,0x0000707070707000,0x0000E0E0E0E0E000,0x0000C0C0C0C0C000,
        0x0000000303030300,0x0000000707070700,0x0000000E0E0E0E00,0x0000001C1C1C1C00,0x0000003838383800,0x0000007070707000,0x000000E0E0E0E000,0x000000C0C0C0C000,
        0x0000000003030300,0x0000000007070700,0x000000000E0E0E00,0x000000001C1C1C00,0x0000000038383800,0x0000000070707000,0x00000000E0E0E000,0x00000000C0C0C000,
        0x0000000000030300,0x0000000000070700,0x00000000000E0E00,0x00000000001C1C00,0x0000000000383800,0x0000000000707000,0x0000000000E0E000,0x0000000000C0C000,
        0x0000000000000300,0x0000000000000700,0x0000000000000E00,0x0000000000001C00,0x0000000000003800,0x0000000000007000,0x000000000000E000,0x000000000000C000,
        0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,
        0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000
    }
};
U64 bitboard_pion[2];
static U64 init_bitboard_PB = 0xFF00;
static U64 init_bitboard_PN = 0xFF000000000000;
static U64 pion_sur_case[64] =
{
    0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,
    0x0001000000000000,0x0002000000000000,0x0004000000000000,0x0008000000000000,0x0010000000000000,0x0020000000000000,0x0040000000000000,0x0080000000000000,
    0x0000010000000000,0x0000020000000000,0x0000040000000000,0x0000080000000000,0x0000100000000000,0x0000200000000000,0x0000400000000000,0x0000800000000000,
    0x0000000100000000,0x0000000200000000,0x0000000400000000,0x0000000800000000,0x0000001000000000,0x0000002000000000,0x0000004000000000,0x0000008000000000,
    0x0000000001000000,0x0000000002000000,0x0000000004000000,0x0000000008000000,0x0000000010000000,0x0000000020000000,0x0000000040000000,0x0000000080000000,
    0x0000000000010000,0x0000000000020000,0x0000000000040000,0x0000000000080000,0x0000000000100000,0x0000000000200000,0x0000000000400000,0x0000000000800000,
    0x0000000000000100,0x0000000000000200,0x0000000000000400,0x0000000000000800,0x0000000000001000,0x0000000000002000,0x0000000000004000,0x0000000000008000,
    0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000
};
static const U64 BB_colonne[8] =
{
    0x0202020202020202, 0x0505050505050505, 0x0A0A0A0A0A0A0A0A, 0x1414141414141414,
    0x2828282828282828, 0x5050505050505050, 0xA0A0A0A0A0A0A0A0, 0x4040404040404040
};

static const U64 arr_file[8] =
{
    0x0101010101010101, 0x0202020202020202, 0x0404040404040404, 0x0808080808080808,
    0x1010101010101010, 0x2020202020202020, 0x4040404040404040, 0x8080808080808080
};
//-------------------------------------------------------------------------------------
//            bitboard pour l'évaluation des tours et dames sur colonnes
//-------------------------------------------------------------------------------------
static const U64 bitboard_colonne[8] =
{
    0x0101010101010101, 0x0202020202020202, 0x0404040404040404, 0x0808080808080808,
    0x1010101010101010, 0x2020202020202020, 0x4040404040404040, 0x8080808080808080
};
//-------------------------------------------------------------------------------------
//                              bitboard pour les diagonales
//-------------------------------------------------------------------------------------
static const U64 bitboard_diag_GD[15] =
{
    0x0100000000000000,0x0201000000000000,0x0402010000000000,0x0804020100000000,
    0x1008040201000000,0x2010080402010000,0x4020100804020100,0x8040201008040201,
    0x0080402010080402,0x0000804020100804,0x0000008040201008,0x0000000080402010,
    0x0000000000804020,0x0000000000008040,0x0000000000000080
};

static const U64 bitboard_diag_DG[15] =
{
    0x8000000000000000,0x4080000000000000,0x2040800000000000,0x1020408000000000,
    0x0810204080000000,0x0408102040800000,0x0204081020408000,0x0102040810204080,
    0x0001020408102040,0x0000010204081020,0x0000000102040810,0x0000000001020408,
    0x0000000000010204,0x0000000000000102,0x0000000000000001
};

//-------------------------------------------------------------------------------------
//            bitboards pour l'évaluation des pions arriérés
//-------------------------------------------------------------------------------------
static const U64 mask_backwards[2][64] =
{
    {
    	0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,
    	0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,
    	0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,
    	0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,
    	0x0000000002020200,0x0000000005050500,0x000000000A0A0A00,0x0000000014141400,0x0000000028282800,0x0000000050505000,0x00000000A0A0A000,0x0000000040404000,
    	0x0000000000020200,0x0000000000050500,0x00000000000A0A00,0x0000000000141400,0x0000000000282800,0x0000000000505000,0x0000000000A0A000,0x0000000000404000,
		0x0000000000000200,0x0000000000000500,0x0000000000000A00,0x0000000000001400,0x0000000000002800,0x0000000000005000,0x000000000000A000,0x0000000000004000,
    	0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000
    },
    {
    	0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,
    	0x0002000000000000,0x0005000000000000,0x000A000000000000,0x0014000000000000,0x0028000000000000,0x0050000000000000,0x00A0000000000000,0x0040000000000000,
    	0x0002020000000000,0x0005050000000000,0x000A0A0000000000,0x0014140000000000,0x0028280000000000,0x0050500000000000,0x00A0A00000000000,0x0040400000000000,
    	0x0002020200000000,0x0005050500000000,0x000A0A0A00000000,0x0014141400000000,0x0028282800000000,0x0050505000000000,0x00A0A0A000000000,0x0040404000000000,
		0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,
    	0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,
    	0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,
    	0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000
    }
};
U64 bitboard_candidat[8];
#endif // BITBOARDS_H
//fin bitboards.h
